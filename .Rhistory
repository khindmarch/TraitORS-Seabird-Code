ggplot(Sex.mat, aes(x = Age.at.sexual.maturity, fill = trait)) +
geom_density(alpha = 0.4) + ## plot the density with transparency of 0.4
labs(x = "Age at Sexual Maturity", y = "Density")+
plottheme+ theme(legend.position = "none")
#change n/a to blank
Sex.mat <- Sex.mat %>%
mutate(Age.at.sexual.maturity = na_if(Age.at.sexual.maturity, "n/a"))
library(ggplot2)
traits<-read.csv("traits.csv")
# filter out max body size
Sex.mat <- traits %>% select(ScientificName_accepted, Age.at.sexual.maturity) %>%
drop_na()
#change n/a to blank
Sex.mat <- Sex.mat %>%
mutate(Age.at.sexual.maturity = na_if(Age.at.sexual.maturity, "n/a"))
# add a body size column
Sex.mat$trait <- "Age.at.sexual.maturity"
## Create the plot
ggplot(Sex.mat, aes(x = Age.at.sexual.maturity, fill = trait)) +
geom_density(alpha = 0.4) + ## plot the density with transparency of 0.4
theme_bw(base_size = 20)+
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+
labs(x = "Age at Sexual Maturity", y = "Density")+
theme(legend.position = "none")+
theme(axis.title.y = element_text(vjust = 3)) +
theme(axis.title.x = element_text(vjust = -1))
## Set the theme
plottheme <-  theme_bw(base_size = 15)+
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+
theme(axis.title.y = element_text(vjust = 3)) +
theme(axis.title.x = element_text(vjust = -1))
## Create the plot
ggplot(Sex.mat, aes(x = Age.at.sexual.maturity, fill = trait)) +
geom_density(alpha = 0.4) + ## plot the density with transparency of 0.4
labs(x = "Age at Sexual Maturity", y = "Density")+
plottheme+ theme(legend.position = "none")
# filter out max body size
Sex.mat <- traits %>% select(ScientificName_accepted, Age.at.sexual.maturity) %>%
drop_na()
library(ggplot2)
traits<-read.csv("traits.csv")
# filter out max body size
Sex.mat <- traits %>% select(ScientificName_accepted, Age.at.sexual.maturity) %>%
drop_na()
#change n/a to blank
Sex.mat <- Sex.mat %>%
mutate(Age.at.sexual.maturity = na_if(Age.at.sexual.maturity, "n/a"))
# add a body size column
Sex.mat$trait <- "Age.at.sexual.maturity"
## Create the plot
ggplot(Sex.mat, aes(x = Age.at.sexual.maturity, fill = trait)) +
geom_density(alpha = 0.4) + ## plot the density with transparency of 0.4
theme_bw(base_size = 20)+
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+
labs(x = "Age at Sexual Maturity", y = "Density")+
theme(legend.position = "none")+
theme(axis.title.y = element_text(vjust = 3)) +
theme(axis.title.x = element_text(vjust = -1))
## Set the theme
plottheme <-  theme_bw(base_size = 15)+
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+
theme(axis.title.y = element_text(vjust = 3)) +
theme(axis.title.x = element_text(vjust = -1))
## Create the plot
ggplot(Sex.mat, aes(x = Age.at.sexual.maturity, fill = trait)) +
geom_density(alpha = 0.4) + ## plot the density with transparency of 0.4
labs(x = "Age at Sexual Maturity", y = "Density")+
plottheme+ theme(legend.position = "none")
#change n/a to blank
Sex.mat$Age.at.sexual.maturity[Sex.mat$Age.at.sexual.maturity == "n/a"] <- ""
library(ggplot2)
traits<-read.csv("traits.csv")
# filter out max body size
Sex.mat <- traits %>% select(ScientificName_accepted, Age.at.sexual.maturity) %>%
drop_na()
#change n/a to blank
Sex.mat$Age.at.sexual.maturity[Sex.mat$Age.at.sexual.maturity == "n/a"] <- ""
# add a body size column
Sex.mat$trait <- "Age.at.sexual.maturity"
## Create the plot
ggplot(Sex.mat, aes(x = Age.at.sexual.maturity, fill = trait)) +
geom_density(alpha = 0.4) + ## plot the density with transparency of 0.4
theme_bw(base_size = 20)+
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+
labs(x = "Age at Sexual Maturity", y = "Density")+
theme(legend.position = "none")+
theme(axis.title.y = element_text(vjust = 3)) +
theme(axis.title.x = element_text(vjust = -1))
## Set the theme
plottheme <-  theme_bw(base_size = 15)+
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+
theme(axis.title.y = element_text(vjust = 3)) +
theme(axis.title.x = element_text(vjust = -1))
## Create the plot
ggplot(Sex.mat, aes(x = Age.at.sexual.maturity, fill = trait)) +
geom_density(alpha = 0.4) + ## plot the density with transparency of 0.4
labs(x = "Age at Sexual Maturity", y = "Density")+
plottheme+ theme(legend.position = "none")
#convert to numeric
Sex.mat <- Sex.mat %>%
mutate(Age.at.sexual.maturity = as.numeric(Age.at.sexual.maturity))
library(ggplot2)
traits<-read.csv("traits.csv")
# filter out max body size
Sex.mat <- traits %>% select(ScientificName_accepted, Age.at.sexual.maturity) %>%
drop_na()
#change n/a to blank
Sex.mat$Age.at.sexual.maturity[Sex.mat$Age.at.sexual.maturity == "n/a"] <- ""
#convert to numeric
Sex.mat <- Sex.mat %>%
mutate(Age.at.sexual.maturity = as.numeric(Age.at.sexual.maturity))
# add a body size column
Sex.mat$trait <- "Age.at.sexual.maturity"
## Create the plot
ggplot(Sex.mat, aes(x = Age.at.sexual.maturity, fill = trait)) +
geom_density(alpha = 0.4) + ## plot the density with transparency of 0.4
theme_bw(base_size = 20)+
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+
labs(x = "Age at Sexual Maturity", y = "Density")+
theme(legend.position = "none")+
theme(axis.title.y = element_text(vjust = 3)) +
theme(axis.title.x = element_text(vjust = -1))
## Set the theme
plottheme <-  theme_bw(base_size = 15)+
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+
theme(axis.title.y = element_text(vjust = 3)) +
theme(axis.title.x = element_text(vjust = -1))
## Create the plot
ggplot(Sex.mat, aes(x = Age.at.sexual.maturity, fill = trait)) +
geom_density(alpha = 0.4) + ## plot the density with transparency of 0.4
labs(x = "Age at Sexual Maturity", y = "Density")+
plottheme+ theme(legend.position = "none")
library(ggplot2)
traits<-read.csv("traits.csv")
# filter out max body size
Sex.mat <- traits %>% select(ScientificName_accepted, Age.at.sexual.maturity) %>%
drop_na()
#change n/a to blank
Sex.mat$Age.at.sexual.maturity[Sex.mat$Age.at.sexual.maturity == "n/a"] <- ""
#convert to numeric
Sex.mat <- Sex.mat %>%
mutate(Age.at.sexual.maturity = as.numeric(Age.at.sexual.maturity))
# add a body size column
Sex.mat$trait <- "Age.at.sexual.maturity"
## Create the plot
ggplot(Sex.mat, aes(x = Age.at.sexual.maturity, fill = trait)) +
geom_density(alpha = 0.4) + ## plot the density with transparency of 0.4
theme_bw(base_size = 20)+
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+
labs(x = "Age at Sexual Maturity (yrs)", y = "Density")+
theme(legend.position = "none")+
theme(axis.title.y = element_text(vjust = 3)) +
theme(axis.title.x = element_text(vjust = -1))
## Set the theme
plottheme <-  theme_bw(base_size = 15)+
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+
theme(axis.title.y = element_text(vjust = 3)) +
theme(axis.title.x = element_text(vjust = -1))
## Create the plot
ggplot(Sex.mat, aes(x = Age.at.sexual.maturity, fill = trait)) +
geom_density(alpha = 0.4) + ## plot the density with transparency of 0.4
labs(x = "Age at Sexual Maturity", y = "Density")+
plottheme+ theme(legend.position = "none")
library(ggplot2)
traits<-read.csv("traits.csv")
# filter out max body size
Sex.mat <- traits %>% select(ScientificName_accepted, Age.at.sexual.maturity) %>%
drop_na()
#change n/a to blank
Sex.mat$Age.at.sexual.maturity[Sex.mat$Age.at.sexual.maturity == "n/a"] <- ""
#convert to numeric
Sex.mat <- Sex.mat %>%
mutate(Age.at.sexual.maturity = as.numeric(Age.at.sexual.maturity))
# add a body size column
Sex.mat$trait <- "Age.at.sexual.maturity"
## Create the plot
ggplot(Sex.mat, aes(x = Age.at.sexual.maturity, fill = trait)) +
geom_density(alpha = 0.4) + ## plot the density with transparency of 0.4
theme_bw(base_size = 20)+
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+
labs(x = "Age at Sexual Maturity (yrs)", y = "Density")+
theme(legend.position = "none")+
theme(axis.title.y = element_text(vjust = 3)) +
theme(axis.title.x = element_text(vjust = -1))
## Set the theme
plottheme <-  theme_bw(base_size = 15)+
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+
theme(axis.title.y = element_text(vjust = 3)) +
theme(axis.title.x = element_text(vjust = -1))
## Create the plot
ggplot(Sex.mat, aes(x = Age.at.sexual.maturity, fill = trait)) +
geom_density(alpha = 0.4) + ## plot the density with transparency of 0.4
labs(x = "Age at Sexual Maturity (yrs)", y = "Density")+
plottheme+ theme(legend.position = "none")
citation(ggplot)
citation(ggplot)
citation("ggplot2")
traits <- traits %>%
mutate(Distribution = tolower(Distribution))
# Filter Distribution category
desired_categories <- c("Ocean basin/realms", "Global", "Regional", "Local")
filtered_data <- traits %>%
filter(Distribution %in% traits)
# Count occurrences and percentages
plot_data_percent <- filtered_data %>%
count(Distribution, Distribution.certainty) %>%
group_by(Distribution) %>%
mutate(Percentage = n / sum(n) * 100) %>%
ungroup()
plot_data_percent <- plot_data_percent %>%
complete(Distribution, Distribution.certainty = 1:3, fill = list(Percentage = 0))
# Create the stacked percentage bar graph
ggplot(plot_data_percent, aes(x = Distribution, y = Percentage, fill = as.factor(Distribution.certainty))) +
geom_bar(stat = "identity", color = "black") +
scale_fill_manual(
values = c("1" = "#243E36", "2" = "#7CA982", "3" = "#99B2DD"),
name = "Certainty"
) +
labs(
x = "Distribution",
y = "Percentage",
title = NULL
) +
theme_minimal() +
theme(legend.position = "right")
traits <- read.csv("traits.csv")
# filter out max body size
body.size <- traits%>%select(ScientificName_accepted, Maximum.body.size)
#add a body size column
body.size$trait.test <- "Maximum.body.size"
ggplot(body.size, aes(x = Maximum.body.size, fill = ScientificName_accepted)) + geom_density(alpha = 0.4)
theme_bw(base_size = 20)+
theme(panel.gride.major = element_blank())+
labs(x= "Maximum.body.size (mm)", y = "Density")+
theme(legend.position = "none")
# filter out max body size
body.size <- traits %>% select(ScientificName_accepted, Maximum.body.size)
# add a body size column
body.size$trait <- "Maximum.body.size"
## Create the plot
ggplot(body.size, aes(x = Maximum.body.size, fill = trait)) +
geom_density(alpha = 0.4) + ## plot the density with transparency of 0.4
theme_bw(base_size = 20)+
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+
labs(x = "Maximum Body Size (mm)", y = "Density")+
theme(legend.position = "none")+
theme(axis.title.y = element_text(vjust = 3)) +
theme(axis.title.x = element_text(vjust = -1))
library(ggplot2)
traits<-read.csv("traits.csv")
# filter out max body size
body.size <- traits %>% select(ScientificName_accepted, Maximum.body.size)
# max body size column
body.size$trait <- "Maximum.body.size"
## Create the plot
ggplot(body.size, aes(x = Maximum.body.size, fill = trait)) +
geom_density(alpha = 0.4) +
labs(x = "Maximum Body Size (mm)", y = "Density")+
plottheme+ theme(legend.position = "none")
traits <- traits %>%
mutate(Distribution = tolower(Distribution))
# filter for distribution category
desired_categories <- c("Ocean basin/realms", "Global", "Regional", "Local")
filtered_data <- traits %>%
filter(Distribution %in% traits)
# Count occurrences
plot_data_percent <- filtered_data %>%
count(Distribution, Distribution.certainty) %>%
group_by(Distribution) %>%
mutate(Percentage = n / sum(n) * 100) %>%
ungroup()
plot_data_percent <- plot_data_percent %>%
complete(Distribution, Distribution.certainty = 1:3, fill = list(Percentage = 0))
# Create the bar graph
ggplot(plot_data_percent, aes(x = Distribution, y = Percentage, fill = as.factor(Distribution.certainty))) +
geom_bar(stat = "identity", color = "black") +
scale_fill_manual(
values = c("1" = "#243E36", "2" = "#7CA982", "3" = "#99B2DD"),
name = "Certainty"
) +
labs(
x = "Distribution",
y = "Percentage",
title = NULL
) +
theme_minimal() +
theme(legend.position = "right")
traits <- traits %>%
mutate(Distribution = tolower(Distribution))
# filter for distribution category
desired_categories <- c("ocean basin/realms", "global", "regional", "local")
filtered_data <- traits %>%
filter(Distribution %in% traits)
# Count occurrences
plot_data_percent <- filtered_data %>%
count(Distribution, Distribution.certainty) %>%
group_by(Distribution) %>%
mutate(Percentage = n / sum(n) * 100) %>%
ungroup()
plot_data_percent <- plot_data_percent %>%
complete(Distribution, Distribution.certainty = 1:3, fill = list(Percentage = 0))
# Create the bar graph
ggplot(plot_data_percent, aes(x = Distribution, y = Percentage, fill = as.factor(Distribution.certainty))) +
geom_bar(stat = "identity", color = "black") +
scale_fill_manual(
values = c("1" = "#243E36", "2" = "#7CA982", "3" = "#99B2DD"),
name = "Certainty"
) +
labs(
x = "Distribution",
y = "Percentage",
title = NULL
) +
theme_minimal() +
theme(legend.position = "right")
traits <- traits %>%
mutate(Distribution = tolower(Distribution))
# filter for distribution category
desired_categories <- c("ocean basin/realms", "global", "regional", "local")
filtered_data <- traits %>%
filter(Distribution %in% traits)
# Count occurrences
plot_data_percent <- filtered_data %>%
count(Distribution, Distribution.certainty) %>%
group_by(Distribution) %>%
mutate(Percentage = n / sum(n) * 100) %>%
ungroup()
plot_data_percent <- plot_data_percent %>%
complete(Distribution, Distribution.certainty = 1:3, fill = list(Percentage = 0))
# Create the bar graph
ggplot(plot_data_percent, aes(x = Distribution, y = Percentage, fill = as.factor(Distribution.certainty))) +
geom_bar(stat = "identity", color = "black") +
scale_fill_manual(
values = c("1" = "#243E36", "2" = "#7CA982", "3" = "#99B2DD"),
name = "Certainty"
) +
labs(
x = "Distribution",
y = "Percentage",
title = NULL
) +
theme_minimal() +
theme(legend.position = "right")
traits <- traits %>%
mutate(Distribution = tolower(Distribution))
filtered_data <- traits %>%
filter(Distribution %in% traits)
# Count occurrences
plot_data_percent <- filtered_data %>%
count(Distribution, Distribution.certainty) %>%
group_by(Distribution) %>%
mutate(Percentage = n / sum(n) * 100) %>%
ungroup()
plot_data_percent <- plot_data_percent %>%
complete(Distribution, Distribution.certainty = 1:3, fill = list(Percentage = 0))
# Create the bar graph
ggplot(plot_data_percent, aes(x = Distribution, y = Percentage, fill = as.factor(Distribution.certainty))) +
geom_bar(stat = "identity", color = "black") +
scale_fill_manual(
values = c("1" = "#243E36", "2" = "#7CA982", "3" = "#99B2DD"),
name = "Certainty"
) +
labs(
x = "Distribution",
y = "Percentage",
title = NULL
) +
theme_minimal() +
theme(legend.position = "right")
library(ggplot2)
library(dplyr)
# Categories
desired_categories <- c("ocean basin/realms", "global", "regional", "local")
# Filter for distribution categories
filtered_data <- traits %>%
filter(Distribution %in% desired_categories)
# Number species for each category
plot_data <- filtered_data %>%
count(Distribution)
# Create the bar chart
ggplot(plot_data, aes(x = Distribution, y = n, fill = Distribution)) +
geom_bar(stat = "identity", color = "black") +
scale_fill_manual(
values = c("ocean basin/realms" = "#99B2DD",
"global" = "#243E36",
"regional" = "#7CA982",
"local" = "#99B245")
) +
labs(
x = "Distribution",
y = "Number of Species",
title = NULL
) +
theme_minimal() +
theme(legend.position = "none") +
plottheme+ theme(legend.position = "none")
body_size_column <- "Body.size"
# Split species with multiple categories into separate rows?
body_size_data <- traits %>%
separate_rows(!!sym(body_size_column), sep = ",| and ") %>%
mutate(!!sym(body_size_column) := trimws(!!sym(body_size_column)))
# number in each category
plot_data <- body_size_data %>%
count(!!sym(body_size_column), name = "Number") %>%
arrange(desc(Number))
# column names
colnames(plot_data) <- c("BodySize", "Number")
# Create the bar chart
ggplot(plot_data, aes(x = reorder(BodySize, -Number), y = Number, fill = BodySize)) +
geom_bar(stat = "identity", color = "black") +
labs(
x = "Body Size Range",
y = "Number of Occurrences",
title = NULL
) +
theme_minimal() +
theme(
axis.text.x = element_text(angle = 45, hjust = 1),
legend.position = "none"
) +
plottheme+ theme(legend.position = "none")
#select body size
body.size <- traits %>% select(ScientificName_accepted, Body.size)
# split and reshape the row
body.size2 <- body.size %>% # Separate rows by ';'
separate_rows(Body.size, sep = ";") %>% # Trim extra spaces
mutate(Body.size = trimws(Body.size))
#check columns
colnames(body.size2)
# number in each category
body_size_plot_data <- body.size2 %>%
count(Body.size, name = "Number") %>%
arrange(desc(Number))
# column names
colnames(plot_data) <- c("BodySize", "Number")
# Replace blanks with "No Data"
plot_data <- body.size2 %>%
mutate(Body.size = ifelse(Body.size == "" | is.na(Body.size), "no data", Body.size))
# Create the bar chart
ggplot(body_size_plot_data, aes(x = reorder(Body.size, -Number), y = Number, fill = Body.size)) +
geom_bar(stat = "identity", color = "black") +
scale_fill_manual(
values = c("100 - <1000 mm" = "#243E36",
"1000 - <10000 mm" = "#7CA982",
"no data" = "#99B245")
) +
labs(
x = "Body Size Range",
y = "Number of Species",
title = NULL
) +
theme_minimal() +
theme(
axis.text.x = element_text(angle = 45, hjust = 1),
legend.position = "none"
) +
plottheme+ theme(legend.position = "none")
#read CSV file
traits <- read.csv("traits.csv")
#select migration
Migration <- traits %>% select(ScientificName_accepted, Migration)
# split and reshape the row
Migration2 <- Migration %>% # Separate rows by ';'
separate_rows(Migration, sep = ";") %>% # Trim extra spaces
mutate(Migration = trimws(Migration))
# column names check
colnames(Migration2)
# number in each category
Migration_plot_data <- Migration2 %>%
count(Migration, name = "Number") %>%
arrange(desc(Number))
# column names
colnames(Migration_plot_data) <- c("Migration", "Number")
# Replace blanks with "No Data"
Migration_plot_data <- Migration_plot_data %>%
mutate(Migration = ifelse(Migration == "" | is.na(Migration), "no data", Migration))
# Create the bar chart
ggplot(Migration_plot_data, aes(x = reorder(Migration, -Number), y = Number, fill = Migration)) +
geom_bar(stat = "identity", color = "black") +
scale_fill_manual(
values = c("Horizontal" = "#243E36",
"none" = "#7CA982",
"no data" = "#99B245")
) +
labs(
x = "Migration",
y = "Number of Species",
title = NULL
) +
theme_minimal() +
theme(
axis.text.x = element_text(angle = 45, hjust = 1),
legend.position = "none"
) +
plottheme+ theme(legend.position = "none")
library(ggplot2)
traits<-read.csv("traits.csv")
# filter out sexual maturity size
Sex.mat <- traits %>% select(ScientificName_accepted, Age.at.sexual.maturity) %>%
drop_na()
#change n/a to blank
Sex.mat$Age.at.sexual.maturity[Sex.mat$Age.at.sexual.maturity == "n/a"] <- ""
#convert to numeric
Sex.mat <- Sex.mat %>%
mutate(Age.at.sexual.maturity = as.numeric(Age.at.sexual.maturity))
# add a body size column
Sex.mat$trait <- "Age.at.sexual.maturity"
## Create the plot
ggplot(Sex.mat, aes(x = Age.at.sexual.maturity, fill = trait)) +
geom_density(alpha = 0.4) + ## plot the density with transparency of 0.4
labs(x = "Age at Sexual Maturity (yrs)", y = "Density")+
plottheme+ theme(legend.position = "none")
